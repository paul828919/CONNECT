# HAProxy Configuration for PostgreSQL High Availability
# Connect Platform - Week 2 Day 10-11
# Purpose: Load balance database traffic with automatic failover

global
    maxconn 1000
    log stdout local0 info
    daemon

defaults
    log global
    mode tcp
    option tcplog
    option dontlognull
    retries 3
    timeout connect 5s
    timeout client 30s
    timeout server 30s
    timeout check 5s

# PostgreSQL Write Traffic (Primary Only)
# Port 5500 routes ONLY to the current Leader
# HAProxy uses Patroni REST API to detect which node is Leader
listen postgres_write
    bind *:5500
    mode tcp
    option httpchk GET /leader
    http-check expect status 200
    default-server inter 3s fall 3 rise 2 on-marked-down shutdown-sessions

    # Check /leader endpoint (returns 200 only if this node is Leader)
    server postgresql1 127.0.0.1:5432 maxconn 100 check port 8008
    server postgresql2 127.0.0.1:5433 maxconn 100 check port 8009 backup

# PostgreSQL Read Traffic (Load Balanced Across All)
# Port 5501 balances read queries across both Leader and Replica
# Uses least-connection algorithm for optimal distribution
listen postgres_read
    bind *:5501
    mode tcp
    balance leastconn
    option httpchk GET /replica
    http-check expect status 200
    default-server inter 3s fall 3 rise 2

    # Check /replica endpoint (returns 200 for both Leader and Replica)
    server postgresql1 127.0.0.1:5432 maxconn 100 check port 8008
    server postgresql2 127.0.0.1:5433 maxconn 100 check port 8009

# HAProxy Stats Dashboard
# Access at http://localhost:7500/stats for real-time monitoring
listen stats
    bind *:7500
    mode http
    stats enable
    stats uri /stats
    stats refresh 5s
    stats show-legends
    stats show-node
    stats realm HAProxy\ Statistics
    # Optional: Add authentication
    # stats auth admin:CHANGE_ME_IN_PRODUCTION
