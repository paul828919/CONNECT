# Patroni Configuration - Primary Node
# Connect Platform - Automated PostgreSQL Failover
# Purpose: Manage primary PostgreSQL instance with automatic failover

scope: connect-cluster
namespace: /db/
name: postgresql1

# REST API for cluster coordination
restapi:
  listen: 127.0.0.1:8008
  connect_address: 127.0.0.1:8008

# etcd3 configuration (modern API)
etcd3:
  host: 127.0.0.1:2379
  protocol: http

# Bootstrap configuration (only used on cluster initialization)
bootstrap:
  dcs:
    ttl: 30                              # Leader lease timeout (seconds)
    loop_wait: 10                        # Polling interval (seconds)
    retry_timeout: 10                    # Retry operations timeout
    maximum_lag_on_failover: 1048576     # 1MB max lag before failover
    postgresql:
      use_pg_rewind: true                # Enable pg_rewind for re-sync
      use_slots: true                    # Use replication slots
      parameters:
        # Replication settings
        wal_level: replica
        hot_standby: on
        max_wal_senders: 10
        max_replication_slots: 10
        wal_keep_size: 1GB

        # Memory settings (128GB server)
        shared_buffers: 32GB
        effective_cache_size: 64GB
        work_mem: 128MB
        maintenance_work_mem: 2GB

        # Checkpoint settings
        checkpoint_timeout: 15min
        checkpoint_completion_target: 0.9
        max_wal_size: 4GB
        min_wal_size: 1GB

        # Performance
        random_page_cost: 1.1             # SSD-optimized
        # effective_io_concurrency: 0     # Not supported on macOS (requires posix_fadvise)

        # Logging
        log_line_prefix: '%m [%p] %u@%d '
        log_min_duration_statement: 1000  # Log slow queries (>1s)
        log_replication_commands: on

  # Initialize database cluster
  initdb:
    - encoding: UTF8
    - locale: en_US.UTF-8
    - data-checksums

  # Create necessary users
  pg_hba:
    - host replication replicator 127.0.0.1/32 md5
    - host replication replicator 172.25.0.0/16 md5
    - host all all 127.0.0.1/32 md5
    - host all all 172.25.0.0/16 md5

  # Create replication user
  users:
    replicator:
      password: e125550f26e26116da2599458a64a513f6a132af76d999ee7f798cbed22674ce
      options:
        - replication

# PostgreSQL configuration
postgresql:
  listen: 127.0.0.1:5432
  connect_address: 127.0.0.1:5432
  data_dir: /opt/homebrew/var/postgresql@15
  bin_dir: /opt/homebrew/opt/postgresql@15/bin
  pgpass: /tmp/pgpass

  authentication:
    replication:
      username: replicator
      password: e125550f26e26116da2599458a64a513f6a132af76d999ee7f798cbed22674ce
    superuser:
      username: postgres
      password: postgres
    rewind:
      username: replicator
      password: e125550f26e26116da2599458a64a513f6a132af76d999ee7f798cbed22674ce

  # PostgreSQL-specific parameters
  parameters:
    unix_socket_directories: '/tmp'
    port: 5432

  # Callbacks for lifecycle events
  create_replica_methods:
    - basebackup
  basebackup:
    checkpoint: 'fast'
    max-rate: '100M'

# Node tags (for failover decisions)
tags:
  nofailover: false      # Allow this node to be promoted
  noloadbalance: false   # Allow read queries
  clonefrom: false       # Allow cloning from this node
  nosync: false          # Allow synchronous replication

# Watchdog (optional - for split-brain prevention)
# watchdog:
#   mode: required
#   device: /dev/watchdog
#   safety_margin: 5
